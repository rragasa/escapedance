a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%;font-family:Source Sans Pro,sans-serif}body{margin:0}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}@media (min-width:320px){.xs-col,.xs-col-right{float:left;box-sizing:border-box}.xs-col-right{float:right}.xs-col-1{width:8.33333%}.xs-col-2{width:16.66667%}.xs-col-3{width:25%}.xs-col-4{width:33.33333%}.xs-col-5{width:41.66667%}.xs-col-6{width:50%}.xs-col-7{width:58.33333%}.xs-col-8{width:66.66667%}.xs-col-9{width:75%}.xs-col-10{width:83.33333%}.xs-col-11{width:91.66667%}.xs-col-12{width:100%}}.brand-type{font-family:houschka-pro,sans-serif}.section{background:#44b649;min-height:500px;padding:20px;-webkit-clip-path:polygon(0 0,100% 10%,100% 100%,0 100%);clip-path:polygon(0 0,100% 10%,100% 100%,0 100%)}#header{height:350px}.parallax{background:url(https://bit.ly/1RkaEZx) no-repeat;min-height:500px;background-attachment:fixed;background-position:50%;background-repeat:no-repeat;background-size:cover}.header-nav{position:fixed;z-index:3;-webkit-clip-path:polygon(0 0,100% 0,100% 60%,0 100%);clip-path:polygon(0 0,100% 0,100% 60%,0 100%);width:100vw;min-height:100px;background:#44b649}.header-nav ul{margin:0;padding:0;list-style:none;overflow:hidden;background-color:#44b649}.header-nav li a{display:block;padding:20px;text-decoration:none;color:#f7914e}.header-nav li a .header .menu-btn:hover,.header-nav li a:hover{background-color:#f4f4f4}.header-nav .logo{display:block;float:left;text-decoration:none;width:155px}@media (min-width:33.75em) and (max-width:45em){.header-nav .logo{width:175px}}@media (min-width:45em) and (max-width:59.99em){.header-nav .logo{width:185px}}@media (min-width:60em){.header-nav .logo{width:200px}}.header-nav .menu{clear:both;max-height:0;transition:max-height .2s ease}.header-nav .menu-icon{cursor:pointer;display:inline-block;float:right;padding:30px 20px;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.header-nav .menu-icon .navicon{background:#f7914e;display:block;height:4px;position:relative;transition:background .2s ease-out;width:35px}.header-nav .menu-icon .navicon:after,.header-nav .menu-icon .navicon:before{background:#f7914e;content:"";display:block;height:100%;position:absolute;transition:all .2s ease-out;width:100%}.header-nav .menu-icon .navicon:before{top:10px}.header-nav .menu-icon .navicon:after{top:-10px}.header-nav .menu-btn{display:none}.header-nav .menu-btn:checked~.menu{max-height:540px;display:block}.header-nav .menu-btn:checked~.menu-icon .navicon{background:0 0}.header-nav .menu-btn:checked~.menu-icon .navicon:before{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.header-nav .menu-btn:checked~.menu-icon .navicon:after{-webkit-transform:rotate(45deg);transform:rotate(45deg)}.header-nav .menu-btn:checked~.menu-icon:not(.steps) .navicon:after,.header-nav .menu-btn:checked~.menu-icon:not(.steps) .navicon:before{top:0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
